<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.UnityConfig">
            <summary>
            Specifies the Unity configuration for the main container.
            </summary>
        </member>
        <member name="P:API.UnityConfig.Container">
            <summary>
            Configured Unity Container.
            </summary>
        </member>
        <member name="M:API.UnityConfig.RegisterTypes(Unity.IUnityContainer)">
            <summary>
            Registers the type mappings with the Unity container.
            </summary>
            <param name="container">The unity container to configure.</param>
            <remarks>
            There is no need to register concrete types such as controllers or
            API controllers (unless you want to change the defaults), as Unity
            allows resolving a concrete type even if it was not previously
            registered.
            </remarks>
        </member>
        <member name="T:API.UnityWebApiActivator">
            <summary>
            Provides the bootstrapping for integrating Unity with WebApi when it is hosted in ASP.NET.
            </summary>
        </member>
        <member name="M:API.UnityWebApiActivator.Start">
            <summary>
            Integrates Unity when the application starts.
            </summary>
        </member>
        <member name="M:API.UnityWebApiActivator.Shutdown">
            <summary>
            Disposes the Unity container when the application is shut down.
            </summary>
        </member>
        <member name="M:API.Controllers.ProductsController.Get(System.Int32)">
            <summary>
            Get selected product
            </summary>
            <param name="id">Product identifier</param>
            <returns>Product details</returns>
        </member>
        <member name="M:API.Controllers.ProductsController.GetAll">
            <summary>
            Get all products
            </summary>
            <returns>List of products</returns>
        </member>
        <member name="M:API.Controllers.ProductsController.Post(API.Models.InputModels.Products.ProductInputModel)">
            <summary>
            Create new product
            </summary>
            <param name="model">Product details</param>
            <returns>Status</returns>
        </member>
        <member name="M:API.Controllers.ProductsController.Put(System.Int32,API.Models.InputModels.Products.ProductInputModel)">
            <summary>
            Update existing product
            </summary>
            <param name="id">Product identifier</param>
            <param name="model">Product details</param>
            <returns>Status</returns>
        </member>
        <member name="M:API.Controllers.ProductsController.Delete(System.Int32)">
            <summary>
            Delete existing product
            </summary>
            <param name="id">Product identifier</param>
            <returns>Status</returns>
        </member>
        <member name="P:API.Models.InputModels.Products.ProductInputModel.Name">
            <summary>
            Product name
            </summary>
        </member>
        <member name="P:API.Models.InputModels.Products.ProductInputModel.Price">
            <summary>
            Product price
            </summary>
        </member>
        <member name="P:API.Models.InputModels.Products.ProductInputModel.CategoryId">
            <summary>
            Category identifier
            </summary>
        </member>
        <member name="P:API.Models.OutputModels.Products.ProductOutputModel.Id">
            <summary>
            Product identifier
            </summary>
        </member>
        <member name="P:API.Models.OutputModels.Products.ProductOutputModel.Name">
            <summary>
            Product name
            </summary>
        </member>
        <member name="P:API.Models.OutputModels.Products.ProductOutputModel.CategoryName">
            <summary>
            Product category name
            </summary>
        </member>
        <member name="M:ExampleApi.Controllers.CategoriesController.Get(System.Int32)">
            <summary>
            Get selected category
            </summary>
            <param name="id">Category identifier</param>
            <returns>Category details</returns>
        </member>
        <member name="M:ExampleApi.Controllers.CategoriesController.GetAll">
            <summary>
            Get all categories
            </summary>
            <returns>List of categories</returns>
        </member>
        <member name="M:ExampleApi.Controllers.CategoriesController.Post(ExampleApi.Models.InputModels.Categories.CategoryInputModel)">
            <summary>
            Create new category
            </summary>
            <param name="model">Category details</param>
            <returns>Status</returns>
        </member>
        <member name="M:ExampleApi.Controllers.CategoriesController.Put(System.Int32,ExampleApi.Models.InputModels.Categories.CategoryInputModel)">
            <summary>
            Update existing category
            </summary>
            <param name="id">Category identifier</param>
            <param name="model">Category details</param>
            <returns>Status</returns>
        </member>
        <member name="M:ExampleApi.Controllers.CategoriesController.Delete(System.Int32)">
            <summary>
            Delete selected category
            </summary>
            <param name="id">Category identifier</param>
            <returns>Status</returns>
        </member>
        <member name="P:ExampleApi.Models.InputModels.Categories.CategoryInputModel.Name">
            <summary>
            Category name
            </summary>
        </member>
        <member name="P:ExampleApi.Models.OutputModels.Categories.CategoryOutputModel.Id">
            <summary>
            Category identifier
            </summary>
        </member>
        <member name="P:ExampleApi.Models.OutputModels.Categories.CategoryOutputModel.Name">
            <summary>
            Category name
            </summary>
        </member>
    </members>
</doc>
